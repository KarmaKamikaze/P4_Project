//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:/Code/repos/STEP/STEP/ANTLR gens\STEP.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace STEP {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public partial class STEPLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		WHITESPACE=1, END_OF_LINE_COMMENT=2, MULTILINE_COMMENT=3, LPAREN=4, RPAREN=5, 
		LBRACK=6, RBRACK=7, ASSIGN=8, PLUS=9, MINUS=10, DIVIDE=11, MULT=12, POW=13, 
		GRTHAN=14, GRTHANEQ=15, LTHAN=16, LTHANEQ=17, EQ=18, NEQ=19, NEG=20, NL=21, 
		COMMA=22, NUMLITERAL=23, STRLITERAL=24, BOOLLITERAL=25, SETUP=26, ENDSETUP=27, 
		LOOP=28, ENDLOOP=29, FUNCTIONS=30, ENDFUNCTIONS=31, FUNCTION=32, ENDFUNCTION=33, 
		VARIABLES=34, ENDVARIABLES=35, BLANK=36, NUMBER=37, STRING=38, BOOLEAN=39, 
		IF=40, ENDIF=41, ELSE=42, CONTINUE=43, BREAK=44, REPEATWHILE=45, ENDWHILE=46, 
		REPEATFOR=47, ENDFOR=48, TO=49, CHANGEBY=50, SWITCH=51, ENDSWITCH=52, 
		WHEN=53, DO=54, FALLTHROUGH=55, OTHERWISEDO=56, RETURN=57, AND=58, OR=59, 
		CONSTANT=60, ID=61;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LINE_TERMINATOR", "DBLQUOTE", "HASHTAG", "LOWERCASE", "UPPERCASE", "LETTER", 
		"DIGIT", "ID_BODY", "STRING_CONTENT", "ML_COMMENT_CONTENT", "EOL_COMMENT_CONTENT", 
		"WHITESPACE", "END_OF_LINE_COMMENT", "MULTILINE_COMMENT", "LPAREN", "RPAREN", 
		"LBRACK", "RBRACK", "ASSIGN", "PLUS", "MINUS", "DIVIDE", "MULT", "POW", 
		"GRTHAN", "GRTHANEQ", "LTHAN", "LTHANEQ", "EQ", "NEQ", "NEG", "NL", "COMMA", 
		"NUMLITERAL", "STRLITERAL", "BOOLLITERAL", "SETUP", "ENDSETUP", "LOOP", 
		"ENDLOOP", "FUNCTIONS", "ENDFUNCTIONS", "FUNCTION", "ENDFUNCTION", "VARIABLES", 
		"ENDVARIABLES", "BLANK", "NUMBER", "STRING", "BOOLEAN", "IF", "ENDIF", 
		"ELSE", "CONTINUE", "BREAK", "REPEATWHILE", "ENDWHILE", "REPEATFOR", "ENDFOR", 
		"TO", "CHANGEBY", "SWITCH", "ENDSWITCH", "WHEN", "DO", "FALLTHROUGH", 
		"OTHERWISEDO", "RETURN", "AND", "OR", "CONSTANT", "ID"
	};


	public STEPLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public STEPLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, "'('", "')'", "'['", "']'", "'='", "'+'", "'-'", 
		"'/'", "'*'", "'^'", "'>'", "'>='", "'<'", "'<='", "'=='", "'!:'", "'!'", 
		null, "','", null, null, null, "'setup'", "'end setup'", "'loop'", "'end loop'", 
		"'functions'", "'end functions'", "'function'", "'end function'", "'variables'", 
		"'end variables'", "'blank'", "'number'", "'string'", "'boolean'", "'if'", 
		"'end if'", "'else'", "'continue'", "'break'", "'repeat while'", "'end while'", 
		"'repeat for'", "'end for'", "'to'", "'change by'", "'switch'", "'end switch'", 
		"'when'", "'do'", "'fallthrough'", "'otherwise do'", "'return'", "'and'", 
		"'or'", "'constant'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WHITESPACE", "END_OF_LINE_COMMENT", "MULTILINE_COMMENT", "LPAREN", 
		"RPAREN", "LBRACK", "RBRACK", "ASSIGN", "PLUS", "MINUS", "DIVIDE", "MULT", 
		"POW", "GRTHAN", "GRTHANEQ", "LTHAN", "LTHANEQ", "EQ", "NEQ", "NEG", "NL", 
		"COMMA", "NUMLITERAL", "STRLITERAL", "BOOLLITERAL", "SETUP", "ENDSETUP", 
		"LOOP", "ENDLOOP", "FUNCTIONS", "ENDFUNCTIONS", "FUNCTION", "ENDFUNCTION", 
		"VARIABLES", "ENDVARIABLES", "BLANK", "NUMBER", "STRING", "BOOLEAN", "IF", 
		"ENDIF", "ELSE", "CONTINUE", "BREAK", "REPEATWHILE", "ENDWHILE", "REPEATFOR", 
		"ENDFOR", "TO", "CHANGEBY", "SWITCH", "ENDSWITCH", "WHEN", "DO", "FALLTHROUGH", 
		"OTHERWISEDO", "RETURN", "AND", "OR", "CONSTANT", "ID"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "STEP.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN.ToString(); } }

	static STEPLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,61,580,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,1,0,3,0,147,8,0,1,0,1,0,3,0,151,8,0,1,1,1,1,1,2,1,2,1,3,
		1,3,1,4,1,4,1,5,1,5,3,5,163,8,5,1,6,1,6,1,7,1,7,1,7,3,7,170,8,7,1,8,1,
		8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,11,1,12,1,12,5,12,184,8,12,10,12,
		12,12,187,9,12,1,12,3,12,190,8,12,1,12,1,12,1,13,1,13,1,13,1,13,5,13,198,
		8,13,10,13,12,13,201,9,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,15,1,15,
		1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,
		1,23,1,23,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,27,1,28,1,28,
		1,28,1,29,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,4,33,251,8,33,11,
		33,12,33,252,1,33,1,33,5,33,257,8,33,10,33,12,33,260,9,33,3,33,262,8,33,
		1,34,1,34,5,34,266,8,34,10,34,12,34,269,9,34,1,34,1,34,1,35,3,35,274,8,
		35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,3,35,285,8,35,1,36,1,36,
		1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,
		1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
		1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,
		1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,
		1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,
		1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,
		1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,
		1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,
		1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
		1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,
		1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,
		1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,
		1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,
		1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,58,
		1,58,1,58,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,
		1,60,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,
		1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,65,
		1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,66,1,66,1,66,
		1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,
		1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,70,1,70,1,70,1,70,
		1,70,1,70,1,70,1,70,1,70,1,71,1,71,5,71,576,8,71,10,71,12,71,579,9,71,
		0,0,72,1,0,3,0,5,0,7,0,9,0,11,0,13,0,15,0,17,0,19,0,21,0,23,1,25,2,27,
		3,29,4,31,5,33,6,35,7,37,8,39,9,41,10,43,11,45,12,47,13,49,14,51,15,53,
		16,55,17,57,18,59,19,61,20,63,21,65,22,67,23,69,24,71,25,73,26,75,27,77,
		28,79,29,81,30,83,31,85,32,87,33,89,34,91,35,93,36,95,37,97,38,99,39,101,
		40,103,41,105,42,107,43,109,44,111,45,113,46,115,47,117,48,119,49,121,
		50,123,51,125,52,127,53,129,54,131,55,133,56,135,57,137,58,139,59,141,
		60,143,61,1,0,7,1,0,97,122,1,0,65,90,1,0,48,57,1,0,34,34,1,0,35,35,3,0,
		10,10,13,13,35,35,2,0,9,9,32,32,583,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,
		0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,
		39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
		0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,
		0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
		1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,
		0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,
		1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,
		0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,
		0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,
		0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,
		0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,
		0,0,1,150,1,0,0,0,3,152,1,0,0,0,5,154,1,0,0,0,7,156,1,0,0,0,9,158,1,0,
		0,0,11,162,1,0,0,0,13,164,1,0,0,0,15,169,1,0,0,0,17,171,1,0,0,0,19,173,
		1,0,0,0,21,175,1,0,0,0,23,177,1,0,0,0,25,181,1,0,0,0,27,193,1,0,0,0,29,
		207,1,0,0,0,31,209,1,0,0,0,33,211,1,0,0,0,35,213,1,0,0,0,37,215,1,0,0,
		0,39,217,1,0,0,0,41,219,1,0,0,0,43,221,1,0,0,0,45,223,1,0,0,0,47,225,1,
		0,0,0,49,227,1,0,0,0,51,229,1,0,0,0,53,232,1,0,0,0,55,234,1,0,0,0,57,237,
		1,0,0,0,59,240,1,0,0,0,61,243,1,0,0,0,63,245,1,0,0,0,65,247,1,0,0,0,67,
		250,1,0,0,0,69,263,1,0,0,0,71,273,1,0,0,0,73,286,1,0,0,0,75,292,1,0,0,
		0,77,302,1,0,0,0,79,307,1,0,0,0,81,316,1,0,0,0,83,326,1,0,0,0,85,340,1,
		0,0,0,87,349,1,0,0,0,89,362,1,0,0,0,91,372,1,0,0,0,93,386,1,0,0,0,95,392,
		1,0,0,0,97,399,1,0,0,0,99,406,1,0,0,0,101,414,1,0,0,0,103,417,1,0,0,0,
		105,424,1,0,0,0,107,429,1,0,0,0,109,438,1,0,0,0,111,444,1,0,0,0,113,457,
		1,0,0,0,115,467,1,0,0,0,117,478,1,0,0,0,119,486,1,0,0,0,121,489,1,0,0,
		0,123,499,1,0,0,0,125,506,1,0,0,0,127,517,1,0,0,0,129,522,1,0,0,0,131,
		525,1,0,0,0,133,537,1,0,0,0,135,550,1,0,0,0,137,557,1,0,0,0,139,561,1,
		0,0,0,141,564,1,0,0,0,143,573,1,0,0,0,145,147,5,13,0,0,146,145,1,0,0,0,
		146,147,1,0,0,0,147,148,1,0,0,0,148,151,5,10,0,0,149,151,5,13,0,0,150,
		146,1,0,0,0,150,149,1,0,0,0,151,2,1,0,0,0,152,153,5,34,0,0,153,4,1,0,0,
		0,154,155,5,35,0,0,155,6,1,0,0,0,156,157,7,0,0,0,157,8,1,0,0,0,158,159,
		7,1,0,0,159,10,1,0,0,0,160,163,3,7,3,0,161,163,3,9,4,0,162,160,1,0,0,0,
		162,161,1,0,0,0,163,12,1,0,0,0,164,165,7,2,0,0,165,14,1,0,0,0,166,170,
		3,11,5,0,167,170,3,13,6,0,168,170,5,95,0,0,169,166,1,0,0,0,169,167,1,0,
		0,0,169,168,1,0,0,0,170,16,1,0,0,0,171,172,8,3,0,0,172,18,1,0,0,0,173,
		174,8,4,0,0,174,20,1,0,0,0,175,176,8,5,0,0,176,22,1,0,0,0,177,178,7,6,
		0,0,178,179,1,0,0,0,179,180,6,11,0,0,180,24,1,0,0,0,181,185,5,35,0,0,182,
		184,3,21,10,0,183,182,1,0,0,0,184,187,1,0,0,0,185,183,1,0,0,0,185,186,
		1,0,0,0,186,189,1,0,0,0,187,185,1,0,0,0,188,190,3,1,0,0,189,188,1,0,0,
		0,189,190,1,0,0,0,190,191,1,0,0,0,191,192,6,12,0,0,192,26,1,0,0,0,193,
		194,5,35,0,0,194,195,5,35,0,0,195,199,1,0,0,0,196,198,3,19,9,0,197,196,
		1,0,0,0,198,201,1,0,0,0,199,197,1,0,0,0,199,200,1,0,0,0,200,202,1,0,0,
		0,201,199,1,0,0,0,202,203,5,35,0,0,203,204,5,35,0,0,204,205,1,0,0,0,205,
		206,6,13,0,0,206,28,1,0,0,0,207,208,5,40,0,0,208,30,1,0,0,0,209,210,5,
		41,0,0,210,32,1,0,0,0,211,212,5,91,0,0,212,34,1,0,0,0,213,214,5,93,0,0,
		214,36,1,0,0,0,215,216,5,61,0,0,216,38,1,0,0,0,217,218,5,43,0,0,218,40,
		1,0,0,0,219,220,5,45,0,0,220,42,1,0,0,0,221,222,5,47,0,0,222,44,1,0,0,
		0,223,224,5,42,0,0,224,46,1,0,0,0,225,226,5,94,0,0,226,48,1,0,0,0,227,
		228,5,62,0,0,228,50,1,0,0,0,229,230,5,62,0,0,230,231,5,61,0,0,231,52,1,
		0,0,0,232,233,5,60,0,0,233,54,1,0,0,0,234,235,5,60,0,0,235,236,5,61,0,
		0,236,56,1,0,0,0,237,238,5,61,0,0,238,239,5,61,0,0,239,58,1,0,0,0,240,
		241,5,33,0,0,241,242,5,58,0,0,242,60,1,0,0,0,243,244,5,33,0,0,244,62,1,
		0,0,0,245,246,3,1,0,0,246,64,1,0,0,0,247,248,5,44,0,0,248,66,1,0,0,0,249,
		251,3,13,6,0,250,249,1,0,0,0,251,252,1,0,0,0,252,250,1,0,0,0,252,253,1,
		0,0,0,253,261,1,0,0,0,254,258,5,46,0,0,255,257,3,13,6,0,256,255,1,0,0,
		0,257,260,1,0,0,0,258,256,1,0,0,0,258,259,1,0,0,0,259,262,1,0,0,0,260,
		258,1,0,0,0,261,254,1,0,0,0,261,262,1,0,0,0,262,68,1,0,0,0,263,267,3,3,
		1,0,264,266,3,17,8,0,265,264,1,0,0,0,266,269,1,0,0,0,267,265,1,0,0,0,267,
		268,1,0,0,0,268,270,1,0,0,0,269,267,1,0,0,0,270,271,3,3,1,0,271,70,1,0,
		0,0,272,274,3,61,30,0,273,272,1,0,0,0,273,274,1,0,0,0,274,284,1,0,0,0,
		275,276,5,116,0,0,276,277,5,114,0,0,277,278,5,117,0,0,278,285,5,101,0,
		0,279,280,5,102,0,0,280,281,5,97,0,0,281,282,5,108,0,0,282,283,5,115,0,
		0,283,285,5,101,0,0,284,275,1,0,0,0,284,279,1,0,0,0,285,72,1,0,0,0,286,
		287,5,115,0,0,287,288,5,101,0,0,288,289,5,116,0,0,289,290,5,117,0,0,290,
		291,5,112,0,0,291,74,1,0,0,0,292,293,5,101,0,0,293,294,5,110,0,0,294,295,
		5,100,0,0,295,296,5,32,0,0,296,297,5,115,0,0,297,298,5,101,0,0,298,299,
		5,116,0,0,299,300,5,117,0,0,300,301,5,112,0,0,301,76,1,0,0,0,302,303,5,
		108,0,0,303,304,5,111,0,0,304,305,5,111,0,0,305,306,5,112,0,0,306,78,1,
		0,0,0,307,308,5,101,0,0,308,309,5,110,0,0,309,310,5,100,0,0,310,311,5,
		32,0,0,311,312,5,108,0,0,312,313,5,111,0,0,313,314,5,111,0,0,314,315,5,
		112,0,0,315,80,1,0,0,0,316,317,5,102,0,0,317,318,5,117,0,0,318,319,5,110,
		0,0,319,320,5,99,0,0,320,321,5,116,0,0,321,322,5,105,0,0,322,323,5,111,
		0,0,323,324,5,110,0,0,324,325,5,115,0,0,325,82,1,0,0,0,326,327,5,101,0,
		0,327,328,5,110,0,0,328,329,5,100,0,0,329,330,5,32,0,0,330,331,5,102,0,
		0,331,332,5,117,0,0,332,333,5,110,0,0,333,334,5,99,0,0,334,335,5,116,0,
		0,335,336,5,105,0,0,336,337,5,111,0,0,337,338,5,110,0,0,338,339,5,115,
		0,0,339,84,1,0,0,0,340,341,5,102,0,0,341,342,5,117,0,0,342,343,5,110,0,
		0,343,344,5,99,0,0,344,345,5,116,0,0,345,346,5,105,0,0,346,347,5,111,0,
		0,347,348,5,110,0,0,348,86,1,0,0,0,349,350,5,101,0,0,350,351,5,110,0,0,
		351,352,5,100,0,0,352,353,5,32,0,0,353,354,5,102,0,0,354,355,5,117,0,0,
		355,356,5,110,0,0,356,357,5,99,0,0,357,358,5,116,0,0,358,359,5,105,0,0,
		359,360,5,111,0,0,360,361,5,110,0,0,361,88,1,0,0,0,362,363,5,118,0,0,363,
		364,5,97,0,0,364,365,5,114,0,0,365,366,5,105,0,0,366,367,5,97,0,0,367,
		368,5,98,0,0,368,369,5,108,0,0,369,370,5,101,0,0,370,371,5,115,0,0,371,
		90,1,0,0,0,372,373,5,101,0,0,373,374,5,110,0,0,374,375,5,100,0,0,375,376,
		5,32,0,0,376,377,5,118,0,0,377,378,5,97,0,0,378,379,5,114,0,0,379,380,
		5,105,0,0,380,381,5,97,0,0,381,382,5,98,0,0,382,383,5,108,0,0,383,384,
		5,101,0,0,384,385,5,115,0,0,385,92,1,0,0,0,386,387,5,98,0,0,387,388,5,
		108,0,0,388,389,5,97,0,0,389,390,5,110,0,0,390,391,5,107,0,0,391,94,1,
		0,0,0,392,393,5,110,0,0,393,394,5,117,0,0,394,395,5,109,0,0,395,396,5,
		98,0,0,396,397,5,101,0,0,397,398,5,114,0,0,398,96,1,0,0,0,399,400,5,115,
		0,0,400,401,5,116,0,0,401,402,5,114,0,0,402,403,5,105,0,0,403,404,5,110,
		0,0,404,405,5,103,0,0,405,98,1,0,0,0,406,407,5,98,0,0,407,408,5,111,0,
		0,408,409,5,111,0,0,409,410,5,108,0,0,410,411,5,101,0,0,411,412,5,97,0,
		0,412,413,5,110,0,0,413,100,1,0,0,0,414,415,5,105,0,0,415,416,5,102,0,
		0,416,102,1,0,0,0,417,418,5,101,0,0,418,419,5,110,0,0,419,420,5,100,0,
		0,420,421,5,32,0,0,421,422,5,105,0,0,422,423,5,102,0,0,423,104,1,0,0,0,
		424,425,5,101,0,0,425,426,5,108,0,0,426,427,5,115,0,0,427,428,5,101,0,
		0,428,106,1,0,0,0,429,430,5,99,0,0,430,431,5,111,0,0,431,432,5,110,0,0,
		432,433,5,116,0,0,433,434,5,105,0,0,434,435,5,110,0,0,435,436,5,117,0,
		0,436,437,5,101,0,0,437,108,1,0,0,0,438,439,5,98,0,0,439,440,5,114,0,0,
		440,441,5,101,0,0,441,442,5,97,0,0,442,443,5,107,0,0,443,110,1,0,0,0,444,
		445,5,114,0,0,445,446,5,101,0,0,446,447,5,112,0,0,447,448,5,101,0,0,448,
		449,5,97,0,0,449,450,5,116,0,0,450,451,5,32,0,0,451,452,5,119,0,0,452,
		453,5,104,0,0,453,454,5,105,0,0,454,455,5,108,0,0,455,456,5,101,0,0,456,
		112,1,0,0,0,457,458,5,101,0,0,458,459,5,110,0,0,459,460,5,100,0,0,460,
		461,5,32,0,0,461,462,5,119,0,0,462,463,5,104,0,0,463,464,5,105,0,0,464,
		465,5,108,0,0,465,466,5,101,0,0,466,114,1,0,0,0,467,468,5,114,0,0,468,
		469,5,101,0,0,469,470,5,112,0,0,470,471,5,101,0,0,471,472,5,97,0,0,472,
		473,5,116,0,0,473,474,5,32,0,0,474,475,5,102,0,0,475,476,5,111,0,0,476,
		477,5,114,0,0,477,116,1,0,0,0,478,479,5,101,0,0,479,480,5,110,0,0,480,
		481,5,100,0,0,481,482,5,32,0,0,482,483,5,102,0,0,483,484,5,111,0,0,484,
		485,5,114,0,0,485,118,1,0,0,0,486,487,5,116,0,0,487,488,5,111,0,0,488,
		120,1,0,0,0,489,490,5,99,0,0,490,491,5,104,0,0,491,492,5,97,0,0,492,493,
		5,110,0,0,493,494,5,103,0,0,494,495,5,101,0,0,495,496,5,32,0,0,496,497,
		5,98,0,0,497,498,5,121,0,0,498,122,1,0,0,0,499,500,5,115,0,0,500,501,5,
		119,0,0,501,502,5,105,0,0,502,503,5,116,0,0,503,504,5,99,0,0,504,505,5,
		104,0,0,505,124,1,0,0,0,506,507,5,101,0,0,507,508,5,110,0,0,508,509,5,
		100,0,0,509,510,5,32,0,0,510,511,5,115,0,0,511,512,5,119,0,0,512,513,5,
		105,0,0,513,514,5,116,0,0,514,515,5,99,0,0,515,516,5,104,0,0,516,126,1,
		0,0,0,517,518,5,119,0,0,518,519,5,104,0,0,519,520,5,101,0,0,520,521,5,
		110,0,0,521,128,1,0,0,0,522,523,5,100,0,0,523,524,5,111,0,0,524,130,1,
		0,0,0,525,526,5,102,0,0,526,527,5,97,0,0,527,528,5,108,0,0,528,529,5,108,
		0,0,529,530,5,116,0,0,530,531,5,104,0,0,531,532,5,114,0,0,532,533,5,111,
		0,0,533,534,5,117,0,0,534,535,5,103,0,0,535,536,5,104,0,0,536,132,1,0,
		0,0,537,538,5,111,0,0,538,539,5,116,0,0,539,540,5,104,0,0,540,541,5,101,
		0,0,541,542,5,114,0,0,542,543,5,119,0,0,543,544,5,105,0,0,544,545,5,115,
		0,0,545,546,5,101,0,0,546,547,5,32,0,0,547,548,5,100,0,0,548,549,5,111,
		0,0,549,134,1,0,0,0,550,551,5,114,0,0,551,552,5,101,0,0,552,553,5,116,
		0,0,553,554,5,117,0,0,554,555,5,114,0,0,555,556,5,110,0,0,556,136,1,0,
		0,0,557,558,5,97,0,0,558,559,5,110,0,0,559,560,5,100,0,0,560,138,1,0,0,
		0,561,562,5,111,0,0,562,563,5,114,0,0,563,140,1,0,0,0,564,565,5,99,0,0,
		565,566,5,111,0,0,566,567,5,110,0,0,567,568,5,115,0,0,568,569,5,116,0,
		0,569,570,5,97,0,0,570,571,5,110,0,0,571,572,5,116,0,0,572,142,1,0,0,0,
		573,577,3,11,5,0,574,576,3,15,7,0,575,574,1,0,0,0,576,579,1,0,0,0,577,
		575,1,0,0,0,577,578,1,0,0,0,578,144,1,0,0,0,579,577,1,0,0,0,15,0,146,150,
		162,169,185,189,199,252,258,261,267,273,284,577,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.Cast<char>().ToArray());


}
} // namespace STEP
